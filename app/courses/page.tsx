'use client';
import { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import { cn } from '@/lib/utils';
import Link from 'next/link';
import Image from 'next/image'; // Course type definition interface Course { id: number; title: string; description: string; instructor: string; duration: string; level: 'Beginner' | 'Intermediate' | 'Advanced'; rating: number; price: number | 'Free'; image: string; isFeatured?: boolean; } export default function CoursesPage() { const router = useRouter(); const [courses, setCourses] = useState<Course[]>([]); const [filteredCourses, setFilteredCourses] = useState<Course[]>([]); const [priceFilter, setPriceFilter] = useState<'all' | 'free' | 'paid'>('all'); const [levelFilter, setLevelFilter] = useState< 'all' | 'Beginner' | 'Intermediate' | 'Advanced' >('all'); const [searchQuery, setSearchQuery] = useState(''); const [isLoading, setIsLoading] = useState(true); // Fetch courses (simulated) useEffect(() => { // In a real app, this would be an API call const fetchCourses = () => { setIsLoading(true); // Simulated API response const coursesData: Course[] = [ { id: 1, title: 'Full Stack Web Development', description: 'Learn to build complete web applications from front to back end using modern technologies like React, Node.js, and MongoDB.', instructor: 'John Smith', duration: '12 weeks', level: 'Intermediate', rating: 4.8, price: 12999, image: 'https://images.unsplash.com/photo-1517694712202-14dd9538aa97?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60', isFeatured: true, }, { id: 2, title: 'UI/UX Design Fundamentals', description: 'Master the principles of user interface and user experience design to create intuitive and beautiful digital products.', instructor: 'Maya Patel', duration: '8 weeks', level: 'Beginner', rating: 4.6, price: 8999, image: 'https://images.unsplash.com/photo-1561070791-2526d30994b5?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60', isFeatured: true, }, { id: 3, title: 'Data Structures & Algorithms', description: 'Develop strong problem-solving skills by mastering essential data structures and algorithms concepts.', instructor: 'David Lee', duration: '10 weeks', level: 'Advanced', rating: 4.9, price: 10999, image: 'https://images.unsplash.com/photo-1515879218367-8466d910aaa4?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60', isFeatured: true, }, { id: 4, title: 'Introduction to Python Programming', description: 'Learn the basics of Python programming language and its applications in various domains.', instructor: 'Sarah Johnson', duration: '6 weeks', level: 'Beginner', rating: 4.5, price: 'Free', image: 'https://images.unsplash.com/photo-1526379095098-d400fd0bf935?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60', }, { id: 5, title: 'Mobile App Development with React Native', description: 'Build cross-platform mobile applications using React Native framework.', instructor: 'Alex Chen', duration: '10 weeks', level: 'Intermediate', rating: 4.7, price: 9999, image: 'https://images.unsplash.com/photo-1551650975-87deedd944c3?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60', }, { id: 6, title: 'Machine Learning Fundamentals', description: 'Understand the core concepts of machine learning and implement basic algorithms.', instructor: 'Priya Sharma', duration: '12 weeks', level: 'Advanced', rating: 4.9, price: 14999, image: 'https://images.unsplash.com/photo-1527474305487-b87b222841cc?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60', }, { id: 7, title: 'Web Accessibility Workshop', description: 'Learn how to make your websites accessible to everyone, including people with disabilities.', instructor: 'Carlos Rodriguez', duration: '4 weeks', level: 'Beginner', rating: 4.4, price: 'Free', image: 'https://images.unsplash.com/photo-1584697964358-3e14ca57658b?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60', }, { id: 8, title: 'Advanced JavaScript Patterns', description: 'Master advanced JavaScript concepts, design patterns, and best practices.', instructor: 'Michael Brown', duration: '8 weeks', level: 'Advanced', rating: 4.8, price: 11999, image: 'https://images.unsplash.com/photo-1555099962-4199c345e5dd?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60', }, ]; setCourses(coursesData); setFilteredCourses(coursesData); setIsLoading(false); }; fetchCourses(); }, []); // Apply filters useEffect(() => { let result = [...courses]; // Apply price filter if (priceFilter === 'free') { result = result.filter((course) => course.price === 'Free'); } else if (priceFilter === 'paid') { result = result.filter((course) => course.price !== 'Free'); } // Apply level filter if (levelFilter !== 'all') { result = result.filter((course) => course.level === levelFilter); } // Apply search query if (searchQuery) { const query = searchQuery.toLowerCase(); result = result.filter( (course) => course.title.toLowerCase().includes(query) || course.instructor.toLowerCase().includes(query) || course.description.toLowerCase().includes(query), ); } setFilteredCourses(result); }, [courses, priceFilter, levelFilter, searchQuery]); // Navigate to course detail const handleCourseClick = (courseId: number) => { router.push(`/courses/${courseId}`); }; // Format price for display const formatPrice = (price: number | 'Free') => { if (price === 'Free') return 'Free'; return `â‚¹${price.toLocaleString('en-IN')}`; }; // Render star rating const renderRating = (rating: number) => { const fullStars = Math.floor(rating); const hasHalfStar = rating % 1 >= 0.5; return ( <div className="flex items-center" data-oid="vp5wsr_"> {[...Array(5)].map((_, i) => ( <svg key={i} xmlns="http://www.w3.org/2000/svg" className={cn( 'h-4 w-4', i < fullStars ? 'text-yellow-400' : i === fullStars && hasHalfStar ? 'text-yellow-400' : 'text-gray-400', )} viewBox="0 0 20 20" fill="currentColor" data-oid="zeyrqkc" > <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" data-oid="1aqso.5" /> </svg> ))} <span className="ml-1 text-gray-300" data-oid="3k69.g8"> {rating.toFixed(1)} </span> </div> ); }; return ( <div className="min-h-screen bg-black text-white font-sans" data-oid="7ibu4i6"> {/* Navbar - reusing from main page */} <nav className="py-4 px-6 md:px-12 flex justify-between items-center border-b border-gray-800" data-oid="o_e1_z-" > <div className="flex items-center" data-oid="7k89jmz"> <div className="relative h-10 w-32" data-oid="368p994"> <div className="absolute inset-0 flex items-center justify-center" data-oid="6sm3kns" > <div className="text-3xl font-bold bg-clip-text text-transparent bg-gradient-to-b from-purple-500 to-pink-500" data-oid="2k.1c:8" > MERGE </div> </div> </div> </div> <div className="hidden md:flex items-center space-x-8" data-oid="boi7y9l"> <Link href="/" className="hover:text-purple-400 transition-colors" data-oid="gb23::i" > Home </Link> <Link href="/courses" className="text-purple-400 transition-colors" data-oid=".333x1v" > Courses </Link> <Link href="/workshops" className="hover:text-purple-400 transition-colors" data-oid="1dwxfgp" > Workshops </Link> <Link href="/hackathons" className="hover:text-purple-400 transition-colors" data-oid="9277gx_" > Hackathons </Link> </div> <div className="hidden md:flex items-center space-x-4" data-oid="9etpnix"> <Link href="/login" className="px-4 py-2 rounded-md border border-purple-500 hover:bg-purple-500/10 transition-colors" data-oid="7slq151" > Login </Link> <Link href="/signup" className="px-4 py-2 rounded-md bg-gradient-to-r from-purple-600 to-pink-500 hover:from-purple-700 hover:to-pink-600 transition-colors" data-oid="gon_.vi" > Sign Up </Link> </div> <button className="md:hidden text-white" data-oid="pamymmh"> <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" data-oid="ppjhuzg" > <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" data-oid="r34vv._" /> </svg> </button> </nav> {/* Page Header */} <div className="bg-gradient-to-b from-black to-gray-900 pt-24 pb-28 px-6 md:px-12 relative overflow-hidden" data-oid="husrn72" > {/* Background elements similar to main page */} <div className="absolute -top-20 -left-20 w-80 h-80 bg-purple-500/20 rounded-full filter blur-3xl" data-oid="d-lj:8z" ></div> <div className="absolute -bottom-20 -right-20 w-80 h-80 bg-pink-500/20 rounded-full filter blur-3xl" data-oid="bk:i2so" ></div> <div className="absolute top-1/2 left-1/3 w-64 h-64 bg-blue-500/10 rounded-full filter blur-3xl" data-oid=":_p-zqg" ></div> <div className="max-w-6xl mx-auto relative z-10 py-8" data-oid="_1y7tk."> <h1 className="text-4xl md:text-6xl lg:text-7xl font-bold mb-8" data-oid="hxkgquq" > Explore Our{' '} <span className="bg-clip-text text-transparent bg-gradient-to-r from-purple-400 to-pink-500" data-oid="bjzz27u" > Courses </span> </h1> <p className="text-xl md:text-2xl text-gray-300 max-w-3xl mb-6" data-oid="l2kjlbu" > Discover a wide range of courses designed to help you master new skills and advance your career in technology. </p> <div className="w-32 h-1 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full mt-6 mb-8" data-oid="xgs411y" ></div> <div className="flex flex-wrap gap-4 mt-8" data-oid="p6185kj"> <div className="bg-gray-800/50 backdrop-blur-sm px-6 py-4 rounded-lg border border-gray-700 inline-flex items-center hover:bg-gray-700/50 hover:border-purple-500 transition-all duration-300 transform hover:-translate-y-1 cursor-pointer group" data-oid="6kct1iq" > <span className="text-purple-400 mr-2 group-hover:text-purple-300" data-oid="0c.56co" > <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 transition-transform duration-500 ease-in-out group-hover:scale-110 group-hover:rotate-12" viewBox="0 0 20 20" fill="currentColor" data-oid="agurnc2" > <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" className="group-hover:animate-pulse" data-oid=":m7ytcq" /> </svg> </span> <span className="group-hover:text-white transition-colors duration-300" data-oid=":g1-m:6" > Expert Instructors </span> </div> <div className="bg-gray-800/50 backdrop-blur-sm px-6 py-4 rounded-lg border border-gray-700 inline-flex items-center hover:bg-gray-700/50 hover:border-purple-500 transition-all duration-300 transform hover:-translate-y-1 cursor-pointer group" data-oid=".jxz0ca" > <span className="text-purple-400 mr-2 group-hover:text-purple-300" data-oid="on.g.9-" > <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 transition-transform duration-500 ease-in-out group-hover:scale-110 group-hover:rotate-12" viewBox="0 0 20 20" fill="currentColor" data-oid=".6.0ldc" > <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" className="group-hover:animate-pulse" data-oid="wqy09.9" /> </svg> </span> <span className="group-hover:text-white transition-colors duration-300" data-oid="2xtv0.f" > Flexible Learning </span> </div> <div className="bg-gray-800/50 backdrop-blur-sm px-6 py-4 rounded-lg border border-gray-700 inline-flex items-center hover:bg-gray-700/50 hover:border-purple-500 transition-all duration-300 transform hover:-translate-y-1 cursor-pointer group" data-oid="b:b2cvl" > <span className="text-purple-400 mr-2 group-hover:text-purple-300" data-oid="9rocwlk" > <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 transition-transform duration-500 ease-in-out group-hover:scale-110 group-hover:rotate-12" viewBox="0 0 20 20" fill="currentColor" data-oid="qsl.sf4" > <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" className="group-hover:animate-pulse" data-oid="2say4ir" /> </svg> </span> <span className="group-hover:text-white transition-colors duration-300" data-oid="tsjnz0z" > Certificate on Completion </span> </div> </div> </div> </div> {/* Filters and Search */} <div className="bg-gray-900 py-8 px-6 md:px-12 border-b border-gray-800" data-oid="qin4:it" > <div className="max-w-6xl mx-auto" data-oid="mfeq-gf"> <div className="flex flex-col md:flex-row gap-6 items-start md:items-center justify-between" data-oid="uenrney" > <div className="flex flex-col sm:flex-row gap-4" data-oid="al-chpv"> <div className="flex items-center space-x-4" data-oid="ytpacwb"> <label className="text-gray-300 whitespace-nowrap" data-oid="ms0y:65" > Price: </label> <div className="flex space-x-2" data-oid="b6qv-g1"> <button onClick={() => setPriceFilter('all')} className={cn( 'px-3 py-1 rounded-md text-sm', priceFilter === 'all' ? 'bg-purple-500 text-white' : 'bg-gray-800 text-gray-300 hover:bg-gray-700', )} data-oid="v0ndb6r" > All </button> <button onClick={() => setPriceFilter('free')} className={cn( 'px-3 py-1 rounded-md text-sm', priceFilter === 'free' ? 'bg-purple-500 text-white' : 'bg-gray-800 text-gray-300 hover:bg-gray-700', )} data-oid="n-it62q" > Free </button> <button onClick={() => setPriceFilter('paid')} className={cn( 'px-3 py-1 rounded-md text-sm', priceFilter === 'paid' ? 'bg-purple-500 text-white' : 'bg-gray-800 text-gray-300 hover:bg-gray-700', )} data-oid="hf7f27y" > Paid </button> </div> </div> <div className="flex items-center space-x-4" data-oid="htlz03x"> <label className="text-gray-300 whitespace-nowrap" data-oid=".vt74-r" > Level: </label> <div className="flex space-x-2" data-oid="mrtz4d:"> <button onClick={() => setLevelFilter('all')} className={cn( 'px-3 py-1 rounded-md text-sm', levelFilter === 'all' ? 'bg-purple-500 text-white' : 'bg-gray-800 text-gray-300 hover:bg-gray-700', )} data-oid="nsep9e7" > All </button> <button onClick={() => setLevelFilter('Beginner')} className={cn( 'px-3 py-1 rounded-md text-sm', levelFilter === 'Beginner' ? 'bg-purple-500 text-white' : 'bg-gray-800 text-gray-300 hover:bg-gray-700', )} data-oid="-zfp-s9" > Beginner </button> <button onClick={() => setLevelFilter('Intermediate')} className={cn( 'px-3 py-1 rounded-md text-sm', levelFilter === 'Intermediate' ? 'bg-purple-500 text-white' : 'bg-gray-800 text-gray-300 hover:bg-gray-700', )} data-oid="vqcf.sv" > Intermediate </button> <button onClick={() => setLevelFilter('Advanced')} className={cn( 'px-3 py-1 rounded-md text-sm', levelFilter === 'Advanced' ? 'bg-purple-500 text-white' : 'bg-gray-800 text-gray-300 hover:bg-gray-700', )} data-oid="jo9hbuj" > Advanced </button> </div> </div> </div> <div className="w-full md:w-auto" data-oid="j5682oj"> <div className="relative" data-oid="u_f:aal"> <input type="text" placeholder="Search courses..." value={searchQuery} onChange={(e) => setSearchQuery(e.target.value)} className="w-full md:w-64 px-4 py-2 rounded-md bg-gray-800 border border-gray-700 focus:outline-none focus:border-purple-500 text-white" data-oid="1bydikk" /> <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" data-oid="e2fxmt8" > <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" data-oid="da2xt1m" /> </svg> </div> </div> </div> </div> </div> {/* Course Listings */} <div className="py-12 px-6 md:px-12 bg-black" data-oid="n.spj-e"> <div className="max-w-6xl mx-auto" data-oid="gua8wai"> {isLoading ? ( <div className="flex justify-center items-center py-20" data-oid="ik9trwi"> <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-purple-500" data-oid="tyos:mm" ></div> </div> ) : filteredCourses.length === 0 ? ( <div className="text-center py-20" data-oid="rth63v5"> <h3 className="text-2xl font-semibold text-gray-300 mb-4" data-oid="ze782ng" > No courses found </h3> <p className="text-gray-400" data-oid="02uo9c1"> Try adjusting your filters or search query </p> </div> ) : ( <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8" data-oid="t8g-flo" > {filteredCourses.map((course) => ( <div key={course.id} className="bg-gray-800 rounded-xl overflow-hidden border border-gray-700 hover:border-purple-500 transition-all hover:-translate-y-1 cursor-pointer" onClick={() => handleCourseClick(course.id)} data-oid="kemgro-" > <div className="relative h-48 overflow-hidden" data-oid=":4f56gh" > <Image src={course.image} alt={course.title} fill className="object-cover" data-oid="_gen_9a" /> {course.isFeatured && ( <div className="absolute top-0 right-0 bg-gradient-to-l from-purple-600 to-pink-500 text-white text-xs font-bold px-3 py-1" data-oid="xu1t36k" > Featured </div> )} </div> <div className="p-6" data-oid="yo6:fh-"> <div className="flex justify-between items-start mb-2" data-oid="846an:b" > <h3 className="text-xl font-semibold" data-oid="x0.t10n" > {course.title} </h3> <span className={cn( 'px-2 py-1 rounded text-xs font-medium', course.level === 'Beginner' ? 'bg-green-500/20 text-green-300' : course.level === 'Intermediate' ? 'bg-blue-500/20 text-blue-300' : 'bg-purple-500/20 text-purple-300', )} data-oid="i3iimod" > {course.level} </span> </div> <p className="text-gray-400 text-sm mb-4 line-clamp-2" data-oid="bp859n:" > {course.description} </p> <div className="flex items-center mb-3" data-oid="zbh4hul"> <div className="w-8 h-8 rounded-full bg-gray-600 mr-3" data-oid="juj4y.2" ></div> <span className="text-gray-300 text-sm" data-oid="t:irv0u" > {course.instructor} </span> </div> <div className="flex justify-between text-gray-400 text-sm mb-4" data-oid="p5y5uis" > <span data-oid="ylyyjo5">{course.duration}</span> {renderRating(course.rating)} </div> <div className="flex justify-between items-center" data-oid="fbxx5k7" > <span className={cn( 'font-medium text-lg', course.price === 'Free' ? 'text-green-400' : 'text-white', )} data-oid="t--cy92" > {formatPrice(course.price)} </span> <button className="px-4 py-2 rounded-md bg-gradient-to-r from-purple-600 to-pink-500 hover:from-purple-700 hover:to-pink-600 transition-colors text-sm font-medium" data-oid="rym7rzg" > Enroll Now </button> </div> </div> </div> ))} </div> )} </div> </div> {/* Footer */} <footer className="py-12 px-6 md:px-12 bg-gray-900 border-t border-gray-800" data-oid="uj:35wl" > <div className="max-w-6xl mx-auto" data-oid="xq.3vn6"> <div className="text-center text-gray-500" data-oid="xfqy:mp"> <p data-oid="z9ekxxc"> &copy; {new Date().getFullYear()} Merge. All rights reserved. </p> </div> </div> </footer> </div> ); }
