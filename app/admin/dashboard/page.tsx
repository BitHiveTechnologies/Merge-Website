'use client';
// This must remain a client component
import { useState, useEffect } from 'react';
import { cn } from '@/lib/utils';
import { adminApi } from '@/lib/adminApi'; // Type definitions interface Course { _id: string; title: string; level: string; description: string; price?: number; duration?: string; instructor?: string; } interface Workshop { _id: string; title: string; date: string; location: string; description: string; speaker?: string; } interface Hackathon { _id: string; title: string; startDate: string; endDate: string; location: string; description: string; prizes?: string[]; } export default function AdminDashboardPage() { const [activeTab, setActiveTab] = useState<'courses' | 'workshops' | 'hackathons'>('courses'); // State for data const [courses, setCourses] = useState<Course[]>([]); const [workshops, setWorkshops] = useState<Workshop[]>([]); const [hackathons, setHackathons] = useState<Hackathon[]>([]); // Loading and error states const [loading, setLoading] = useState(true); const [error, setError] = useState<string | null>(null); // Fetch data based on active tab useEffect(() => { const fetchData = async () => { setLoading(true); setError(null); try { if (activeTab === 'courses') { const data = await adminApi.courses.getAll(); setCourses(data); } else if (activeTab === 'workshops') { const data = await adminApi.workshops.getAll(); setWorkshops(data); } else if (activeTab === 'hackathons') { const data = await adminApi.hackathons.getAll(); setHackathons(data); } } catch (err: any) { setError(err.message || `Failed to fetch ${activeTab}`); console.error(`Error fetching ${activeTab}:`, err); } finally { setLoading(false); } }; fetchData(); }, [activeTab]); return ( <div data-oid="q2:b5ey"> <h1 className="text-3xl font-bold mb-8" data-oid="5rg-3l_"> Admin Dashboard </h1> {/* Navigation Tabs */} <div className="bg-gray-900 py-6 px-6 rounded-t-lg border border-gray-800" data-oid="lreem2i" > <div className="flex space-x-4 border-b border-gray-800" data-oid="acuz_mk"> <button onClick={() => setActiveTab('courses')} className={cn( 'px-6 py-3 font-medium text-lg', activeTab === 'courses' ? 'text-purple-400 border-b-2 border-purple-400' : 'text-gray-400 hover:text-gray-300', )} data-oid="5mzvjjb" > Courses </button> <button onClick={() => setActiveTab('workshops')} className={cn( 'px-6 py-3 font-medium text-lg', activeTab === 'workshops' ? 'text-purple-400 border-b-2 border-purple-400' : 'text-gray-400 hover:text-gray-300', )} data-oid="wrzd5x9" > Workshops </button> <button onClick={() => setActiveTab('hackathons')} className={cn( 'px-6 py-3 font-medium text-lg', activeTab === 'hackathons' ? 'text-purple-400 border-b-2 border-purple-400' : 'text-gray-400 hover:text-gray-300', )} data-oid="mg7ko4_" > Hackathons </button> </div> </div> {/* Content Area */} <div className="bg-gray-800 rounded-b-lg p-6 border-x border-b border-gray-700" data-oid="mzja_jn" > {loading ? ( <div className="flex justify-center items-center min-h-[50vh]"> <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-purple-500"></div> </div> ) : error ? ( <div className="bg-red-500/20 border border-red-500 rounded-md p-4 mb-6"> <p className="text-red-200">{error}</p> <button onClick={() => window.location.reload()} className="mt-2 px-4 py-2 bg-red-600 hover:bg-red-700 rounded-md text-sm font-medium transition-colors" > Try Again </button> </div> ) : ( <> {/* Courses Tab Content */} {activeTab === 'courses' && ( <div data-oid="1cnnjhi"> <h2 className="text-2xl font-bold mb-4 bg-clip-text text-transparent bg-gradient-to-r from-purple-400 to-pink-500" data-oid="1gbaejo" > Manage Courses </h2> <p className="text-gray-300 mb-6" data-oid="6jrvdwb"> View and manage all courses and their registrations. </p> <div className="bg-gray-800 rounded-lg border border-gray-700 overflow-hidden"> <div className="overflow-x-auto"> <table className="min-w-full divide-y divide-gray-700"> <thead className="bg-gray-900"> <tr> <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider" > Title </th> <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider" > Level </th> <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider" > Instructor </th> <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider" > Price </th> <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider" > Actions </th> </tr> </thead> <tbody className="bg-gray-800 divide-y divide-gray-700"> {courses.length === 0 ? ( <tr> <td colSpan={5} className="px-6 py-4 text-center text-gray-400" > No courses found </td> </tr> ) : ( courses.map((course) => ( <tr key={course._id} className="hover:bg-gray-750" > <td className="px-6 py-4 whitespace-nowrap text-sm font-medium"> {course.title} </td> <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-300"> {course.level} </td> <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-300"> {course.instructor || 'N/A'} </td> <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-300"> {course.price ? `${course.price}` : 'Free'} </td> <td className="px-6 py-4 whitespace-nowrap text-sm"> <a href={`/admin/dashboard/courses/${course._id}`} className="text-purple-400 hover:text-purple-300 transition-colors" > View Registrations </a> </td> </tr> )) )} </tbody> </table> </div> </div> </div> )} {/* Workshops Tab Content */} {activeTab === 'workshops' && ( <div data-oid="lu-oedk"> <h2 className="text-2xl font-bold mb-4 bg-clip-text text-transparent bg-gradient-to-r from-purple-400 to-pink-500" data-oid="3uyy7wy" > Manage Workshops </h2> <p className="text-gray-300 mb-6" data-oid="28l96gg"> View and manage all workshops and their registrations. </p> <div className="bg-gray-800 rounded-lg border border-gray-700 overflow-hidden"> <div className="overflow-x-auto"> <table className="min-w-full divide-y divide-gray-700"> <thead className="bg-gray-900"> <tr> <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider" > Title </th> <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider" > Date </th> <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider" > Location </th> <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider" > Speaker </th> <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider" > Actions </th> </tr> </thead> <tbody className="bg-gray-800 divide-y divide-gray-700"> {workshops.length === 0 ? ( <tr> <td colSpan={5} className="px-6 py-4 text-center text-gray-400" > No workshops found </td> </tr> ) : ( workshops.map((workshop) => ( <tr key={workshop._id} className="hover:bg-gray-750" > <td className="px-6 py-4 whitespace-nowrap text-sm font-medium"> {workshop.title} </td> <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-300"> {new Date(workshop.date).toLocaleDateString()} </td> <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-300"> {workshop.location} </td> <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-300"> {workshop.speaker || 'N/A'} </td> <td className="px-6 py-4 whitespace-nowrap text-sm"> <a href={`/admin/dashboard/workshops/${workshop._id}`} className="text-purple-400 hover:text-purple-300 transition-colors" > View Registrations </a> </td> </tr> )) )} </tbody> </table> </div> </div> </div> )} {/* Hackathons Tab Content */} {activeTab === 'hackathons' && ( <div data-oid="1:rot0m"> <h2 className="text-2xl font-bold mb-4 bg-clip-text text-transparent bg-gradient-to-r from-purple-400 to-pink-500" data-oid="33341:3" > Manage Hackathons </h2> <p className="text-gray-300 mb-6" data-oid="o5m1kj."> View and manage all hackathons and their registrations. </p> <div className="bg-gray-800 rounded-lg border border-gray-700 overflow-hidden"> <div className="overflow-x-auto"> <table className="min-w-full divide-y divide-gray-700"> <thead className="bg-gray-900"> <tr> <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider" > Title </th> <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider" > Dates </th> <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider" > Location </th> <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider" > Actions </th> </tr> </thead> <tbody className="bg-gray-800 divide-y divide-gray-700"> {hackathons.length === 0 ? ( <tr> <td colSpan={4} className="px-6 py-4 text-center text-gray-400" > No hackathons found </td> </tr> ) : ( hackathons.map((hackathon) => ( <tr key={hackathon._id} className="hover:bg-gray-750" > <td className="px-6 py-4 whitespace-nowrap text-sm font-medium"> {hackathon.title} </td> <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-300"> {new Date(hackathon.startDate).toLocaleDateString()} -{' '} {new Date(hackathon.endDate).toLocaleDateString()} </td> <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-300"> {hackathon.location} </td> <td className="px-6 py-4 whitespace-nowrap text-sm"> <a href={`/admin/dashboard/hackathons/${hackathon._id}`} className="text-purple-400 hover:text-purple-300 transition-colors" > View Registrations </a> </td> </tr> )) )} </tbody> </table> </div> </div> </div> )} </> )} </div> </div> ); }
